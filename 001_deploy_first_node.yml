# Copyright 2018 VMware, Inc.
# SPDX-License-Identifier: BSD-2-Clause OR GPL-3.0-only
---
#
# Playbook to deploy the first NSX Appliance node. Also checks the node
# status
#
- hosts: 127.0.0.1
  connection: local
  become: yes
  vars_files:
    - deploy_nsx_cluster_vars.yml
  tasks:
# Deploys the first NSX Manager 
    - name: Deploy NSX Manager OVA
      nsxt_deploy_ova:
        ovftool_path: "/usr/bin"
        datacenter: "{{ nsx_node1['datacenter'] }}"
        deployment_size: "{{ deployment_size }}"
        datastore: "{{ nsx_node1['datastore'] }}"
        portgroup: "{{ nsx_node1['portgroup'] }}"
        cluster: "{{ nsx_node1['cluster'] }}"
        vmname: "{{ nsx_node1['hostname'] }}"
        hostname: "{{ nsx_node1['hostname'] }}"
        dns_server: "{{ dns_server }}"
        dns_domain: "{{ domain }}"
        ntp_server: "{{ ntp_server }}"
        gateway: "{{ gateway }}"
        ip_address: "{{ nsx_node1['mgmt_ip'] }}"
        netmask: "{{ netmask }}"
        admin_password: "{{ nsx_password }}"
        cli_password: "{{ nsx_password }}"
        ssh_enabled: "{{ ssh_enabled }}"
        allow_ssh_root_login: "{{ allow_ssh_root_login }}"
        path_to_ova: "{{ nsx_ova_path }}"
        ova_file: "{{ nsx_ova }}"
        # temp setup because I use a nested vcenter
        #vcenter: "vc.bmrf.io"
        vcenter: "{{ compute_managers[0]['mgmt_ip'] }}"
        vcenter_user: "{{ compute_managers[0]['username'] }}"
        vcenter_passwd: "{{ compute_managers[0]['password'] }}"

        # Note: The role below is for NSX 2.5 and above. For prior
        # release, the role should be "nsx-manager nsx-controller"
        role: "NSX Manager"

# Verifies NSX Manager health against the health check API        
    - name: Check NSX Manager status
      nsxt_manager_status:
          hostname: "{{ nsx_node1['mgmt_ip'] }}"
          username: "{{ nsx_username }}"
          password: "{{ nsx_password }}"
          validate_certs: "{{ validate_certs }}"
          wait_time: 50

# Sleeping for 45 seconds. NSX Manager will report as up but the next call may fail based on testing. 45 Second wait allows this to work          
    - name: Sleeping for 45 seconds
      wait_for:
        timeout: 45
      delegate_to: localhost          

# Configures the integrated NSX Manager VIP
    - name: Add NSX Manager cluster VIP
      nsxt_virtual_ip:
          hostname: "{{ nsx_node1['mgmt_ip'] }}"
          username: "{{ nsx_username }}"
          password: "{{ nsx_password }}"
          validate_certs: "{{ validate_certs }}"
          virtual_ip_address: "{{ nsxt_vip }}"
          state: "{{ state }}"

 # Checks that the NSX Manager is available prior to proceeding
    - name: Check VIP Status
      nsxt_manager_status:
          hostname: "{{ nsxt_vip }}"
          username: "{{ nsx_username }}"
          password: "{{ nsx_password }}"
          validate_certs: "{{ validate_certs }}"
          wait_time: 50

# Accepts the NSX-T Manager EULA
    - name: Accept NSX-T EULA
      nsxt_eula_accept:
          hostname: "{{ nsxt_vip }}"
          username: "{{ nsx_username }}"
          password: "{{ nsx_password }}"
          validate_certs: "{{ validate_certs }}"